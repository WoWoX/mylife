package classes{		import flash.display.MovieClip;	import flash.events.TimerEvent;	import flash.utils.Timer;	import flash.utils.getTimer;	import flash.text.TextFieldAutoSize;			public class Avatar extends MovieClip	{		private const MESSAGE_DURATION:int = 4000;				public var nextX:Number;		public var nextY:Number;				public var lastUpdateX:Number;		public var lastUpdateY:Number;				private var balloonTimer:Timer;				/**		 * Configures the avatar.		 */		public function Avatar(userId:int, userName:String)		{			// Set movieclip name to unique user id, to retrieve it later on the map			this.name = String(userId);						// Show user name at the feet of the avatar			this.lb_name.text = userName;						// Inhibit mouse events			this.mouseEnabled = false;			this.mouseChildren = false;						// Hide chat balloon			this.balloon.visible = false;						// Start timer to check balloon messages			balloonTimer = new Timer(1000);			balloonTimer.addEventListener(TimerEvent.TIMER, onBalloonTimer, false, 0, true);			balloonTimer.start();		}				public function destroy():void		{			// Remove balloon timer			if (balloonTimer != null)			{				balloonTimer.stop();				balloonTimer.removeEventListener(TimerEvent.TIMER, onBalloonTimer);				balloonTimer = null;			}		}				/**		 * Makes the avatar execute the proper action (stand or walk) in the proper direction.		 */		public function setGraphics(action:String, dir:String):void		{			this.avatarGraphics.gotoAndStop(action + "_" + dir);		}				/**		 * Makes the avatar's chat balloon show a message.		 */		public function showChatMessage(message:String):void		{			this.balloon.visible = true;			this.balloon.tf_msg.autoSize = TextFieldAutoSize.LEFT;			this.balloon.nextTime = getTimer() + MESSAGE_DURATION;			this.balloon.tf_msg.text += message + "\t\n";						updateBalloon();		}				// --------------------------------------------------------------------------- //				/**		 * Removes previous messages from the chat balloon.		 */		private function onBalloonTimer(evt:TimerEvent):void		{			if (getTimer() > this.balloon.nextTime)			{				var txt:String = this.balloon.tf_msg.text;				txt = txt.substr(txt.indexOf("\t") + 2, txt.length);				this.balloon.tf_msg.text = txt;				updateBalloon();				this.balloon.nextTime = getTimer() + MESSAGE_DURATION;				if (this.balloon.tf_msg.text.length == 0)					this.balloon.visible = false;			}		}				/**		 * Updates the chat balloon graphics.		 */		private function updateBalloon():void		{			this.balloon.center.height = this.balloon.tf_msg.textHeight - 5			this.balloon.bottom.y = this.balloon.center.y + this.balloon.center.height			this.balloon.y = - this.balloon.height - 50		}	}}